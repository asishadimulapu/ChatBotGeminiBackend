"use strict";var bcrypt=require("bcryptjs"),jwt=require("jsonwebtoken"),User=require("../models/User");exports.register=function(r,t,s){var n,a,i,u,o,c;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,n=r.body,a=n.name,i=n.email,u=n.password,e.next=4,regeneratorRuntime.awrap(User.findOne({email:i}));case 4:if(e.sent)return e.abrupt("return",t.status(400).json({msg:"User already exists with this email"}));e.next=7;break;case 7:return 12,e.next=10,regeneratorRuntime.awrap(bcrypt.hash(u,12));case 10:return o=e.sent,e.next=13,regeneratorRuntime.awrap(User.create({name:a.trim(),email:i.toLowerCase().trim(),password:o}));case 13:c=e.sent,t.status(201).json({msg:"User registered successfully",user:{id:c._id,name:c.name,email:c.email}}),e.next=20;break;case 17:e.prev=17,e.t0=e.catch(0),s(e.t0);case 20:case"end":return e.stop()}},null,null,[[0,17]])},exports.login=function(r,t,s){var n,a,i,u,o;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,n=r.body,a=n.email,i=n.password,e.next=4,regeneratorRuntime.awrap(User.findOne({email:a.toLowerCase().trim()}));case 4:if(u=e.sent){e.next=7;break}return e.abrupt("return",t.status(400).json({msg:"Invalid email or password"}));case 7:return e.next=9,regeneratorRuntime.awrap(bcrypt.compare(i,u.password));case 9:if(e.sent){e.next=12;break}return e.abrupt("return",t.status(400).json({msg:"Invalid email or password"}));case 12:o=jwt.sign({userId:u._id},process.env.JWT_SECRET,{expiresIn:"24h"}),t.json({token:o,user:{id:u._id,name:u.name,email:u.email}}),e.next=19;break;case 16:e.prev=16,e.t0=e.catch(0),s(e.t0);case 19:case"end":return e.stop()}},null,null,[[0,16]])};
//# sourceMappingURL=authController.min.js.map
