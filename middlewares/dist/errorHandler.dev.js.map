{"version":3,"sources":["errorHandler.js"],"names":["errorHandler","err","req","res","next","console","error","code","field","Object","keys","keyValue","status","json","msg","charAt","toUpperCase","slice","name","errors","values","map","message","statusCode","process","env","NODE_ENV","stack","notFound","module","exports"],"mappings":";;;;;;;;AAAA;AACA,IAAMA,YAAY,GAAG,SAAfA,YAAe,CAACC,GAAD,EAAMC,GAAN,EAAWC,GAAX,EAAgBC,IAAhB,EAAyB;AAC5CC,EAAAA,OAAO,CAACC,KAAR,CAAc,QAAd,EAAwBL,GAAxB,EAD4C,CAG5C;;AACA,MAAIA,GAAG,CAACM,IAAJ,KAAa,KAAjB,EAAwB;AACtB,QAAMC,KAAK,GAAGC,MAAM,CAACC,IAAP,CAAYT,GAAG,CAACU,QAAhB,EAA0B,CAA1B,CAAd;AACA,WAAOR,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,MAAAA,GAAG,YAAKN,KAAK,CAACO,MAAN,CAAa,CAAb,EAAgBC,WAAhB,KAAgCR,KAAK,CAACS,KAAN,CAAY,CAAZ,CAArC;AADuB,KAArB,CAAP;AAGD,GAT2C,CAW5C;;;AACA,MAAIhB,GAAG,CAACiB,IAAJ,KAAa,iBAAjB,EAAoC;AAClC,QAAMC,MAAM,GAAGV,MAAM,CAACW,MAAP,CAAcnB,GAAG,CAACkB,MAAlB,EAA0BE,GAA1B,CAA8B,UAAAf,KAAK;AAAA,aAAIA,KAAK,CAACgB,OAAV;AAAA,KAAnC,CAAf;AACA,WAAOnB,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,MAAAA,GAAG,EAAE,mBADqB;AAE1BK,MAAAA,MAAM,EAANA;AAF0B,KAArB,CAAP;AAID,GAlB2C,CAoB5C;;;AACA,MAAIlB,GAAG,CAACiB,IAAJ,KAAa,mBAAjB,EAAsC;AACpC,WAAOf,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,GAAG,EAAE;AAAP,KAArB,CAAP;AACD;;AAED,MAAIb,GAAG,CAACiB,IAAJ,KAAa,mBAAjB,EAAsC;AACpC,WAAOf,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,GAAG,EAAE;AAAP,KAArB,CAAP;AACD,GA3B2C,CA6B5C;;;AACA,MAAIb,GAAG,CAACiB,IAAJ,KAAa,YAAb,IAA6BjB,GAAG,CAACiB,IAAJ,KAAa,eAA9C,EAA+D;AAC7D,WAAOf,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,GAAG,EAAE;AAAP,KAArB,CAAP;AACD,GAhC2C,CAkC5C;;;AACA,MAAMS,UAAU,GAAGtB,GAAG,CAACsB,UAAJ,IAAkB,GAArC;AACA,MAAMD,OAAO,GAAGE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GACZ,sBADY,GAEZzB,GAAG,CAACqB,OAFR;AAIAnB,EAAAA,GAAG,CAACS,MAAJ,CAAWW,UAAX,EAAuBV,IAAvB;AACEC,IAAAA,GAAG,EAAEQ;AADP,KAEME,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,IAA0C;AAAEC,IAAAA,KAAK,EAAE1B,GAAG,CAAC0B;AAAb,GAFhD;AAID,CA5CD,C,CA8CA;;;AACA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAC1B,GAAD,EAAMC,GAAN,EAAc;AAC7BA,EAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAArB;AACD,CAFD;;AAIAe,MAAM,CAACC,OAAP,GAAiB;AAAE9B,EAAAA,YAAY,EAAZA,YAAF;AAAgB4B,EAAAA,QAAQ,EAARA;AAAhB,CAAjB","sourcesContent":["// Global error handling middleware\r\nconst errorHandler = (err, req, res, next) => {\r\n  console.error('Error:', err);\r\n\r\n  // Mongoose duplicate key error\r\n  if (err.code === 11000) {\r\n    const field = Object.keys(err.keyValue)[0];\r\n    return res.status(400).json({\r\n      msg: `${field.charAt(0).toUpperCase() + field.slice(1)} already exists`\r\n    });\r\n  }\r\n\r\n  // Mongoose validation error\r\n  if (err.name === 'ValidationError') {\r\n    const errors = Object.values(err.errors).map(error => error.message);\r\n    return res.status(400).json({\r\n      msg: 'Validation failed',\r\n      errors\r\n    });\r\n  }\r\n\r\n  // JWT errors\r\n  if (err.name === 'JsonWebTokenError') {\r\n    return res.status(401).json({ msg: 'Invalid token' });\r\n  }\r\n\r\n  if (err.name === 'TokenExpiredError') {\r\n    return res.status(401).json({ msg: 'Token expired' });\r\n  }\r\n\r\n  // MongoDB connection errors\r\n  if (err.name === 'MongoError' || err.name === 'MongooseError') {\r\n    return res.status(500).json({ msg: 'Database connection error' });\r\n  }\r\n\r\n  // Default error\r\n  const statusCode = err.statusCode || 500;\r\n  const message = process.env.NODE_ENV === 'production' \r\n    ? 'Something went wrong' \r\n    : err.message;\r\n\r\n  res.status(statusCode).json({\r\n    msg: message,\r\n    ...(process.env.NODE_ENV === 'development' && { stack: err.stack })\r\n  });\r\n};\r\n\r\n// 404 handler\r\nconst notFound = (req, res) => {\r\n  res.status(404).json({ msg: 'Route not found' });\r\n};\r\n\r\nmodule.exports = { errorHandler, notFound };\r\n"],"file":"errorHandler.dev.js"}