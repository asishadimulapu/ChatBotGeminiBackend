{"version":3,"sources":["User.js"],"names":["mongoose","require","Schema","name","userSchema","type","String","required","trim","maxlength","email","unique","lowercase","match","password","minlength","timestamps","index","model"],"mappings":"aAAA,IAAMA,SAAWC,QAAQ,YAAnBD,WAAWC,IAAQD,SAAAE,OAAzB,CAGEC,KAAM,CADFC,KAAAA,OACJD,SAAM,EAAA,EAAA,oBACJE,MAAMC,EACNC,UAAW,CAAA,EAAD,2CACVC,UAHI,CAAA,GAAA,qCAKJC,MAAAA,CANmCJ,KAAAC,OAQrCI,SAAO,EAAA,EAAA,qBACLL,QAAMC,EACNC,WAAW,EACXI,MAAM,EACNC,MAAAA,CAAAA,8CAJK,iCAMLC,SAAQ,CAd2BR,KAAAC,OAgBrCQ,SAAU,EAAA,EAAA,wBACRT,UAAMC,CADE,EAAA,iDAGRS,CAHQC,YAAA,IAKTZ,WAIHa,MAAA,CAAAP,MAAA,IACAN,OAAAA,QAAiBJ,SAAAkB,MAAA,OAAAd","file":"User.min.js","sourcesContent":["const mongoose = require('mongoose');\r\n\r\nconst userSchema = new mongoose.Schema({\r\n  name: {\r\n    type: String,\r\n    required: [true, 'Name is required'],\r\n    trim: true,\r\n    minlength: [2, 'Name must be at least 2 characters long'],\r\n    maxlength: [50, 'Name cannot exceed 50 characters']\r\n  },\r\n  email: {\r\n    type: String,\r\n    required: [true, 'Email is required'],\r\n    unique: true,\r\n    lowercase: true,\r\n    trim: true,\r\n    match: [/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/, 'Please provide a valid email']\r\n  },\r\n  password: {\r\n    type: String,\r\n    required: [true, 'Password is required'],\r\n    minlength: [8, 'Password must be at least 8 characters long']\r\n  }\r\n}, {\r\n  timestamps: true // Add createdAt and updatedAt fields\r\n});\r\n\r\n// Create index for better query performance\r\nuserSchema.index({ email: 1 });\r\n\r\nmodule.exports = mongoose.model('User', userSchema);\r\n"]}