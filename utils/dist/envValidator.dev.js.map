{"version":3,"sources":["envValidator.js"],"names":["validateEnvironment","requiredEnvVars","missing","filter","envVar","process","env","length","console","error","forEach","exit","JWT_SECRET","port","parseInt","PORT","isNaN","log","module","exports"],"mappings":";;AAAA,IAAMA,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAChC,MAAMC,eAAe,GAAG,CACtB,gBADsB,EAEtB,YAFsB,EAGtB,WAHsB,EAItB,MAJsB,CAAxB;AAOA,MAAMC,OAAO,GAAGD,eAAe,CAACE,MAAhB,CAAuB,UAAAC,MAAM;AAAA,WAAI,CAACC,OAAO,CAACC,GAAR,CAAYF,MAAZ,CAAL;AAAA,GAA7B,CAAhB;;AAEA,MAAIF,OAAO,CAACK,MAAR,GAAiB,CAArB,EAAwB;AACtBC,IAAAA,OAAO,CAACC,KAAR,CAAc,2CAAd;AACAP,IAAAA,OAAO,CAACQ,OAAR,CAAgB,UAAAN,MAAM;AAAA,aAAII,OAAO,CAACC,KAAR,gBAAsBL,MAAtB,EAAJ;AAAA,KAAtB;AACAI,IAAAA,OAAO,CAACC,KAAR,CAAc,0EAAd;AACAJ,IAAAA,OAAO,CAACM,IAAR,CAAa,CAAb;AACD,GAf+B,CAiBhC;;;AACA,MAAIN,OAAO,CAACC,GAAR,CAAYM,UAAZ,CAAuBL,MAAvB,GAAgC,EAApC,EAAwC;AACtCC,IAAAA,OAAO,CAACC,KAAR,CAAc,gEAAd;AACAJ,IAAAA,OAAO,CAACM,IAAR,CAAa,CAAb;AACD,GArB+B,CAuBhC;;;AACA,MAAME,IAAI,GAAGC,QAAQ,CAACT,OAAO,CAACC,GAAR,CAAYS,IAAb,CAArB;;AACA,MAAIC,KAAK,CAACH,IAAD,CAAL,IAAeA,IAAI,GAAG,CAAtB,IAA2BA,IAAI,GAAG,KAAtC,EAA6C;AAC3CL,IAAAA,OAAO,CAACC,KAAR,CAAc,oDAAd;AACAJ,IAAAA,OAAO,CAACM,IAAR,CAAa,CAAb;AACD;;AAEDH,EAAAA,OAAO,CAACS,GAAR,CAAY,iCAAZ;AACD,CA/BD;;AAiCAC,MAAM,CAACC,OAAP,GAAiB;AAAEnB,EAAAA,mBAAmB,EAAnBA;AAAF,CAAjB","sourcesContent":["const validateEnvironment = () => {\r\n  const requiredEnvVars = [\r\n    'GEMINI_API_KEY',\r\n    'JWT_SECRET',\r\n    'MONGO_URI',\r\n    'PORT'\r\n  ];\r\n\r\n  const missing = requiredEnvVars.filter(envVar => !process.env[envVar]);\r\n  \r\n  if (missing.length > 0) {\r\n    console.error('❌ Missing required environment variables:');\r\n    missing.forEach(envVar => console.error(`   - ${envVar}`));\r\n    console.error('\\nPlease check your .env file and ensure all required variables are set.');\r\n    process.exit(1);\r\n  }\r\n\r\n  // Validate JWT_SECRET strength\r\n  if (process.env.JWT_SECRET.length < 32) {\r\n    console.error('❌ JWT_SECRET must be at least 32 characters long for security.');\r\n    process.exit(1);\r\n  }\r\n\r\n  // Validate PORT\r\n  const port = parseInt(process.env.PORT);\r\n  if (isNaN(port) || port < 1 || port > 65535) {\r\n    console.error('❌ PORT must be a valid number between 1 and 65535.');\r\n    process.exit(1);\r\n  }\r\n\r\n  console.log('✅ Environment validation passed');\r\n};\r\n\r\nmodule.exports = { validateEnvironment };\r\n"],"file":"envValidator.dev.js"}