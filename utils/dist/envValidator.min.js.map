{"version":3,"sources":["envValidator.js"],"names":["validateEnvironment","missing","filter","envVar","process","env","forEach","console","error","concat","exit","JWT_SECRET","length","port","parseInt","PORT","isNaN","log","module","exports"],"mappings":"aAAA,IAAMA,oBAAsB,WAC1B,IASIC,EAToB,CADpBD,iBACJ,aAOA,YAA6C,QAErBE,OAAA,SAAAC,GAAA,OAAAC,QAAAC,IAAAF,KAEN,EAAhBF,EAAQK,SAAcC,QAAAC,MAAID,6CAAJN,EAAtBK,QAAA,SAAAH,GAAA,OAAAI,QAAAC,MAAA,QAAAC,OAAAN,MACAI,QAAQC,MAAM,4EACdJ,QAAQM,KAAK,IAIXN,QAAQC,IAAIM,WAAWC,OAAS,KAClCL,QAAQC,MAAM,kEACdJ,QAAQM,KAAK,IAIf,IAAMG,EAAOC,SAASV,QAAQC,IAAIU,OAC9BC,MAAMH,IAASA,EAAO,GAAY,MAAPA,KAA/BN,QAAUM,MAAN,sDACFN,QAAQC,KAAR,IAIFD,QAAQU,IAAI,oCAGdC,OAAOC,QAAU,CAAEnB,oBAAAA","file":"envValidator.min.js","sourcesContent":["const validateEnvironment = () => {\r\n  const requiredEnvVars = [\r\n    'GEMINI_API_KEY',\r\n    'JWT_SECRET',\r\n    'MONGO_URI',\r\n    'PORT'\r\n  ];\r\n\r\n  const missing = requiredEnvVars.filter(envVar => !process.env[envVar]);\r\n  \r\n  if (missing.length > 0) {\r\n    console.error('❌ Missing required environment variables:');\r\n    missing.forEach(envVar => console.error(`   - ${envVar}`));\r\n    console.error('\\nPlease check your .env file and ensure all required variables are set.');\r\n    process.exit(1);\r\n  }\r\n\r\n  // Validate JWT_SECRET strength\r\n  if (process.env.JWT_SECRET.length < 32) {\r\n    console.error('❌ JWT_SECRET must be at least 32 characters long for security.');\r\n    process.exit(1);\r\n  }\r\n\r\n  // Validate PORT\r\n  const port = parseInt(process.env.PORT);\r\n  if (isNaN(port) || port < 1 || port > 65535) {\r\n    console.error('❌ PORT must be a valid number between 1 and 65535.');\r\n    process.exit(1);\r\n  }\r\n\r\n  console.log('✅ Environment validation passed');\r\n};\r\n\r\nmodule.exports = { validateEnvironment };\r\n"]}